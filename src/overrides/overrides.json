{
    "apiVersion": "6.1.1.0",
    "apis": [
        {
            "operations": [
                {
                    "method": "GET",
                    "nickname": "getUsersCommand",
                    "notes": "",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "Page number to retrieve",
                            "format": "int32",
                            "name": "page",
                            "paramType": "query",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "allowMultiple": false,
                            "description": "Number of Users per page",
                            "format": "int32",
                            "name": "numberPerPage",
                            "paramType": "query",
                            "required": false,
                            "type": "integer"
                        },
                        {
                            "allowMultiple": false,
                            "description": "Search for Users with username matching filter text",
                            "name": "filter",
                            "paramType": "query",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "allowMultiple": false,
                            "description": "Get Users by username",
                            "name": "username",
                            "paramType": "query",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "allowMultiple": false,
                            "description": "A comma separated list of User attributes (keys) to be used to sort the results",
                            "name": "sortKey",
                            "paramType": "query",
                            "required": false,
                            "type": "string"
                        },
                        {
                            "allowMultiple": false,
                            "description": "Order of the sorted results (ASC for ascending, DESC for descending)",
                            "name": "order",
                            "paramType": "query",
                            "required": false,
                            "type": "string"
                        }
                    ],
                    "summary": "Get all Users",
                    "type": "UsersView"
                }
            ],
            "path": "/users"
        },
        {
            "operations": [
                {
                    "method": "GET",
                    "nickname": "getUserCommand",
                    "notes": "",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "ID of User to get",
                            "name": "id",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "summary": "Get a User ",
                    "type": "UserView"
                },
                {
                    "method": "PUT",
                    "nickname": "updateUserCommand",
                    "notes": "",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "ID of User",
                            "name": "id",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "allowMultiple": false,
                            "description": "User to update",
                            "name": "user",
                            "paramType": "body",
                            "required": true,
                            "type": "UserView"
                        }
                    ],
                    "summary": "Update a User",
                    "type": "UserView"
                }
            ],
            "path": "/users/{id}"
        },
        {
            "operations": [
                {
                    "method": "PUT",
                    "nickname": "updateUserPasswordCommand",
                    "notes": "",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "description": "ID of User",
                            "name": "id",
                            "paramType": "path",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "allowMultiple": false,
                            "description": "User password to update",
                            "name": "user",
                            "paramType": "body",
                            "required": true,
                            "type": "UserPasswordView"
                        }
                    ],
                    "summary": "Update a User's Password",
                    "type": "void"
                }
            ],
            "path": "/users/{id}/password"
        }
    ],
    "basePath": "https://localhost:9000/pa-admin-api/v3",
    "models": {
        "Instant": {
            "description": "A timestamp when the key was created.",
            "id": "Instant",
            "properties": {
                "timestamp": {
                    "description": "Timestamp value",
                    "type": "string"
                }
            },
            "required": [
                "timestamp"
            ]
        },
        "JsonNode": {
            "description": "A JSON Node.",
            "id": "JsonNode",
            "properties": {
                "json": {
                    "description": "JSON String?",
                    "type": "string"
                }
            },
            "required": [
                "json"
            ]
        },
        "SanType": {
            "description": "Available general name.",
            "id": "SanType",
            "properties": {
                "name": {
                    "description": "Available general name.",
                    "type": "string"
                }
            },
            "required": [
                "name"
            ]
        },
        "PublicKey": {
            "description": "A public key.",
            "id": "PublicKey",
            "properties": {
                "key": {
                    "description": "Key string.",
                    "type": "string"
                }
            },
            "required": [
                "key"
            ]
        },
        "PolicyItem": {
            "description": "A policy in Ping Access.",
            "id": "PolicyItem",
            "properties": {
                "id": {
                    "description": "The policy ID.",
                    "format": "int32",
                    "type": "integer"
                },
                "type": {
                    "description": "The policy type.",
                    "type": "string"
                }
            },
            "required": [
                "id",
                "type"
            ]
        },
        "ExportData": {
            "description": "A JSON backup file.",
            "id": "ExportData",
            "properties": {
                "data": {
                    "$ref": "Object",
                    "description": "The entities being exported."
                },
                "encryptionKey": {
                    "$ref": "JsonWebKey",
                    "description": "The randomly-generated export encryption key to be included with the data."
                },
                "masterKeys": {
                    "$ref": "MasterKeysView",
                    "description": "The encrypted master keys."
                },
                "version": {
                    "description": "The version of PingAccess that was exported.",
                    "type": "string"
                }
            },
            "required": [
                "data",
                "encryptionKey",
                "masterKeys",
                "version"
            ]
        }
    }
}
